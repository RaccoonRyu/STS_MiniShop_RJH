<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 1. jdbc.properties 등록 -->
	<context:property-placeholder location="classpath:com/config/jdbc.properties"/>
	<!-- 2. DBCP2를 통한  DataSource 생성 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${oracle.jdbc}"></property>
		<property name="url" value="${oracle.url}"></property>
		<property name="username" value="${oracle.userid}"></property>
		<property name="password" value="${oracle.passwd}"></property>
	</bean>
	<!-- transaction의 시작  -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="txManager"/><!-- tx어노테이션 활성화  -->
	<!-- trasaction처리 종료  -->
	
	<!-- 3.DataSource이용하여 SqlSessionFactoryBean 생성 후 Mapper 위치와 dto의 위치 및 alias 지정 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations">
			<list>
				<value>classpath:com/config/CartMapper.xml</value>
				<value>classpath:com/config/GoodsMapper.xml</value>
				<value>classpath:com/config/MemberMapper.xml</value>				
			</list>		
		</property>
		<property name="typeAliases"><!-- DTO클래스에서 alias명 지정 @Alias("alias명") -->
			<list>
				<value>com.dto.CartDTO</value>
				<value>com.dto.GoodsDTO</value>
				<value>com.dto.MemberDTO</value>
				<value>com.dto.OrderDTO</value>				
			</list>		
		</property>
	</bean>	
	<!-- 4. 마지막으로 SqlSessionFactoryBean이용하여 SqlSessionTemplate 생성, SqlSession과 동일한 기능 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	<!-- dao에서 사용할 SqlSessionTemplate 생성 -->
		<constructor-arg name="sqlSessionFactory" ref="sessionFactory"></constructor-arg>
	</bean>
	<!-- 종료 -->
</beans>
